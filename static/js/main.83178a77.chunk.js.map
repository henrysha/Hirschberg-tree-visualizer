{"version":3,"sources":["components/InputForm.js","components/Tree.js","Hirschberg.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["InputForm","props","state","sequence1","sequence2","matchScore","mismatchScore","gapScore","handleChange","bind","handleScoreChange","handleSubmit","e","console","log","target","id","value","this","setState","keyValueObj","preventDefault","submitInput","className","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","size","onChange","Button","variant","type","Component","initialPosition","x","y","RecursionTree","data","orientation","translate","UP","LEFT","TOPLEFT","ORIGIN","getWeights","v","w","delta","rights","downs","downrights","i","length","push","j","revStr","str","split","reverse","join","globalAlignment","getWeightsResult","table","pointers","choice1","choice2","choice3","Math","max","m","n","string1","string2","point","alignment","alignmentObj","hirschberg","short","long","indent_i","indent_j","level","node","name","attributes","prefix_i","suffix_j","psR","gwR","gaR","ceil","p1","p2","p3","lefts","ups","uplefts","s1","s2","s3","suffixTable","suffixPointers","choice","pTable","sTable","pList","sList","sumList","report","maxVal","prefixSuffix","a","substring","b","alignment1Obj","alignment2Obj","middle","r","resultObj","merge","globalAlignmentResult","Main","displayResult","treeData","inputObj","hResult","match","mismatch","gap","keys","h","tree","alignment_header","new_middle","key","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83178a77.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport NumericInput from \"react-numeric-input\";\nimport \"./InputForm.css\";\n\nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence1: \"GC\",\n      sequence2: \"GCAT\",\n      matchScore: 1,\n      mismatchScore: -1,\n      gapScore: -1\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleScoreChange = this.handleScoreChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    console.log(\n      \"handleChange e.target, e.t.value: \",\n      e.target.id,\n      e.target.value\n    );\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleScoreChange(keyValueObj) {\n    console.log(\"handleScroeChange: \", keyValueObj);\n    this.setState(keyValueObj);\n  }\n\n  handleSubmit(e) {\n    console.log(\"handleSubmit event: \", e);\n    e.preventDefault();\n    this.props.submitInput(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"inputForm\">\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group as={Row} controlId=\"sequence1\">\n            <Form.Label column sm={3}>\n              Sequence 1\n            </Form.Label>\n            <Col sm={9}>\n              <Form.Control\n                size=\"sm\"\n                value={this.state.sequence1}\n                onChange={this.handleChange}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"sequence2\">\n            <Form.Label column sm={3}>\n              Sequence 2\n            </Form.Label>\n            <Col sm={9}>\n              <Form.Control\n                size=\"sm\"\n                value={this.state.sequence2}\n                onChange={this.handleChange}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"matchScore\">\n            <Form.Label className=\"numericLabel\" column sm={3}>\n              Match Score\n            </Form.Label>\n            <Col sm={4}>\n              <NumericInput\n                value={this.state.matchScore}\n                onChange={value =>\n                  this.handleScoreChange({ matchScore: value })\n                }\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"mismatchScore\">\n            <Form.Label className=\"numericLabel\" column sm={3}>\n              Mismatch Score\n            </Form.Label>\n            <Col sm={4}>\n              <NumericInput\n                value={this.state.mismatchScore}\n                onChange={value =>\n                  this.handleScoreChange({ mismatchScore: value })\n                }\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"gapScore\">\n            <Form.Label className=\"numericLabel\" column sm={3}>\n              Gap Score\n            </Form.Label>\n            <Col sm={4}>\n              <NumericInput\n                value={this.state.gapScore}\n                onChange={value => this.handleScoreChange({ gapScore: value })}\n              />\n            </Col>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default InputForm;\n","import React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport \"./Tree.css\";\n\nlet initialPosition = { x: 512, y: 50 };\nfunction RecursionTree(props) {\n  return (\n    <div className=\"TreeWrapper\">\n      <Tree\n        data={props.data}\n        orientation=\"vertical\"\n        translate={initialPosition}\n      />\n    </div>\n  );\n}\n\nexport default RecursionTree;\n","import { Children } from \"react\";\n\nconst UP = [-1, 0];\nconst LEFT = [0, -1];\nconst TOPLEFT = [-1, -1];\nconst ORIGIN = [0, 0];\nvar d = {};\nfunction getWeights(v, w, delta) {\n  var rights = [];\n  var downs = [];\n  var downrights = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    rights.push([]);\n    downs.push([]);\n    downrights.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      rights[i][j] = 0;\n      downs[i][j] = 0;\n      downrights[i][j] = 0;\n    }\n  }\n  for (var i = 0; i < v.length + 1; i++) {\n    for (var j = 1; j < w.length + 1; j++) {\n      //console.log(\"delta, w[j-1]: \", delta, w[j - 1]);\n      rights[i][j] = delta[\"-\"][w[j - 1]];\n    }\n  }\n  for (var i = 1; i < v.length + 1; i++) {\n    for (var j = 0; j < w.length + 1; j++) {\n      //console.log(\"delta 26: \", delta);\n      //console.log(v[i - 1]);\n      //console.log(\"v: \", v);\n      downs[i][j] = delta[v[i - 1]][\"-\"];\n    }\n  }\n  for (var i = 1; i < v.length + 1; i++) {\n    for (var j = 1; j < w.length + 1; j++) {\n      downrights[i][j] = delta[v[i - 1]][w[j - 1]];\n    }\n  }\n  return [rights, downs, downrights];\n}\n\nfunction revStr(str) {\n  return str\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n}\n\nfunction globalAlignment(v, w, delta) {\n  console.log('globalAlignment: v: ', v, \", w: \", w);\n  const getWeightsResult = getWeights(v, w, delta);\n  var rights = getWeightsResult[0];\n  var downs = getWeightsResult[1];\n  var downrights = getWeightsResult[2];\n  //console.log(\"rights, downs, dr: \", rights, downs, downrights);\n  var table = [];\n  var pointers = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    table.push([]);\n    pointers.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      table[i][j] = 0;\n      pointers[i][j] = ORIGIN;\n    }\n  }\n  for (var i = 0; i < v.length + 1; i++) {\n    for (var j = 0; j < w.length + 1; j++) {\n      if (i === 0 && j === 0) {\n        continue;\n      } else if (i > 0 && j === 0) {\n        table[i][j] = table[i - 1][j] + downs[i][j];\n        pointers[i][j] = UP;\n      } else if (i === 0 && j > 0) {\n        //console.log(\"i, j, table, rights: \", i, j, table, rights);\n        table[i][j] = table[i][j - 1] + rights[i][j];\n        pointers[i][j] = LEFT;\n      } else {\n        var choice1 = table[i - 1][j] + downs[i][j];\n        var choice2 = table[i][j - 1] + rights[i][j];\n        var choice3 = table[i - 1][j - 1] + downrights[i][j];\n        table[i][j] = Math.max(choice1, choice2, choice3);\n        if (table[i][j] === choice1) {\n          pointers[i][j] = UP;\n        } else if (table[i][j] === choice2) {\n          pointers[i][j] = LEFT;\n        } else {\n          pointers[i][j] = TOPLEFT;\n        }\n      }\n    }\n  }\n  var m = v.length;\n  var n = w.length;\n  var string1 = \"\";\n  var string2 = \"\";\n  while (1) {\n    var point = pointers[m][n];\n    if (point === UP) {\n      string1 += v[m - 1];\n      string2 += \"-\";\n    } else if (point === LEFT) {\n      string1 += \"-\";\n      string2 += w[n - 1];\n    } else if (point === TOPLEFT) {\n      string1 += v[m - 1];\n      string2 += w[n - 1];\n    } else {\n      string1 += v[m];\n      string2 += w[n];\n    }\n    m += point[0];\n    n += point[1];\n    if (m == 0 && n == 0) {\n      break;\n    }\n  }\n  string1 = revStr(string1);\n  string2 = revStr(string2);\n  var alignment = \"\";\n  for (var i = 0; i < string1.length; i++) {\n    if (string1[i] === string2[i]) {\n      alignment += \"|\";\n    } else {\n      alignment += \"=\";\n    }\n  }\n  \n  \n  var alignmentObj = {\n    string1: string1,\n    alignment: alignment,\n    string2: string2,\n  };\n  \n  alignment = string1 + \"\\n\" + alignment + \"\\n\" + string2;\n  console.log(alignmentObj);\n  console.log(alignment);\n  return [table, pointers, alignment, alignmentObj];\n}\n\nfunction prefixSuffix(v, w, delta) {\n  const gwR = getWeights(v, w, delta);\n  var rights = gwR[0];\n  var downs = gwR[1];\n  var downrights = gwR[2];\n  const gaR = globalAlignment(v, w, delta);\n  var table = gaR[0];\n  var pointers = gaR[1];\n  var alignment = gaR[2];\n  var split = Math.ceil(w.length / 2);\n  var p1 = [];\n  var p2 = [];\n  var p3 = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    p1.push([]);\n    p2.push([]);\n    p3.push([]);\n    for (var j = 0; j < split + 1; j++) {\n      p1[i][j] = rights[i][j];\n      p2[i][j] = downs[i][j];\n      p3[i][j] = downrights[i][j];\n    }\n  }\n  var lefts = [];\n  var ups = [];\n  var uplefts = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    lefts.push([]);\n    ups.push([]);\n    uplefts.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      lefts[i][j] = 0;\n      downs[i][j] = 0;\n      downrights[i][j] = 0;\n    }\n  }\n  for (var i = v.length; i > -1; i--) {\n    for (var j = w.length - 1; j > split - 1; j--) {\n      lefts[i][j] = rights[i][j + 1];\n    }\n  }\n  for (var i = v.length - 1; i > -1; i--) {\n    for (var j = w.length; j > split - 1; j--) {\n      ups[i][j] = downs[i + 1][j];\n    }\n  }\n  for (var i = v.length - 1; i > -1; i--) {\n    for (var j = w.length - 1; j > split - 1; j--) {\n      uplefts[i][j] = downrights[i + 1][j + 1];\n    }\n  }\n  var s1 = [];\n  var s2 = [];\n  var s3 = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    s1.push([]);\n    s2.push([]);\n    s3.push([]);\n    for (var j = split; j < w.length + 1; j++) {\n      s1[i][j] = lefts[i][j];\n      s2[i][j] = ups[i][j];\n      s3[i][j] = uplefts[i][j];\n    }\n  }\n\n  var suffixTable = [];\n  var suffixPointers = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    suffixTable.push([]);\n    suffixPointers.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      suffixTable[i][j] = 0;\n      suffixPointers[i][j] = ORIGIN;\n    }\n  }\n\n  for (var i = v.length; i > -1; i--) {\n    for (var j = w.length; j > -1; j--) {\n      if (i === v.length && j === w.length) {\n        continue;\n      } else if (i === v.length && j < w.length) {\n        suffixPointers[i][j] = LEFT;\n        suffixTable[i][j] = suffixTable[i][j + 1] + lefts[i][j];\n      } else if (i < v.length && j === w.length) {\n        suffixPointers[i][j] = UP;\n        suffixTable[i][j] = suffixTable[i + 1][j] + ups[i][j];\n      } else {\n        var choice1 = suffixTable[i][j + 1] + lefts[i][j];\n        var choice2 = suffixTable[i + 1][j] + ups[i][j];\n        var choice3 = suffixTable[i + 1][j + 1] + uplefts[i][j];\n        var choice = Math.max(choice1, choice2, choice3);\n        if (choice === choice1) {\n          suffixPointers[i][j] = LEFT;\n        } else if (choice === choice2) {\n          suffixPointers[i][j] = UP;\n        } else {\n          suffixPointers[i][j] = TOPLEFT;\n        }\n        suffixTable[i][j] = choice;\n      }\n    }\n  }\n\n  var pTable = [];\n  var sTable = [];\n  var pList = [];\n  var sList = [];\n  var sumList = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    pTable.push([]);\n    for (var j = 0; j < split + 1; j++) {\n      pTable[i].push(table[i][j]);\n    }\n    sTable.push([]);\n    for (var j = split; j < w.length + 1; j++) {\n      sTable[i].push(suffixTable[i][j]);\n    }\n  }\n\n  for (var i = 0; i < v.length + 1; i++) {\n    pList.push(pTable[i][pTable[0].length - 1]);\n    sList.push(sTable[i][0]);\n  }\n\n  for (var i = 0; i < v.length + 1; i++) {\n    sumList.push(pList[i] + sList[i]);\n  }\n\n  var report = 0;\n  var maxVal = sumList[0];\n  //console.log(\"sumList: \", sumList);\n\n  for (var i = 0; i < v.length + 1; i++) {\n    if (sumList[i] > maxVal) {\n      maxVal = sumList[i];\n      report = i;\n    }\n  }\n  return [report, split];\n}\n\nfunction merge(alignment1Obj, alignment2Obj) {\n  console.log('merge, alignment1Obj: ', alignment1Obj, ', alignment2Obj: ', alignment2Obj);\n  var a = alignment1Obj.string1 + alignment2Obj.string1;\n  var b = alignment1Obj.string2 + alignment2Obj.string2;\n  var middle = \"\";\n  for (var i = 0; i < Math.max(a.length, b.length); i++) {\n    if (i < a.length && i < b.length && a[i] === b[i]) {\n      middle += \"|\";\n    } else {\n      middle += \"=\";\n    }\n  }\n  const r = a + \"\\n\" + middle + \"\\n\" + b;\n  \n  const resultObj = {\n    string1: a, \n    alignment: middle,\n    string2: b,\n  }\n\n  console.log('merge r: ', r, ', resultObj: ', resultObj);\n  return [r, resultObj];\n}\n\nfunction hirschberg(short, long, delta, indent_i, indent_j, level) {\n  //console.log(\"d: \", d, \", level: \", level);\n  var node = {\n    name: \"(\" + short + \" / \" + long + \")\",\n    attributes: {\n      prefix_i: indent_i,\n      suffix_j: indent_j,\n      i: short.length + indent_i,\n      j: long.length + indent_j\n    }\n  };\n  //console.log(\"node: \", node);\n\n  // if (!(level in d)) {\n  //   d[level] = [];\n  // }\n  // d[level].push([\n  //   indent_i,\n  //   indent_j,\n  //   short.length + indent_i,\n  //   long.length + indent_j,\n  //   short,\n  //   long\n  // ]);\n  // console.log(\"d[level]: \", d[level]);\n  if (long.length > 1) {\n    const psR = prefixSuffix(short, long, delta);\n    var i = psR[0];\n    var j = psR[1];\n    var a = hirschberg(\n      short.substring(0, i),\n      long.substring(0, j),\n      delta,\n      indent_i,\n      indent_j,\n      level + 1\n    );\n    var b = hirschberg(\n      short.substring(i, short.length),\n      long.substring(j, long.length),\n      delta,\n      indent_i + i,\n      indent_j + j,\n      level + 1\n    );\n    node[\"children\"] = [a[1], b[1]];\n    //var m = merge(a[0], b[0]);\n    //console.log('m: ', m, ', node: ', node);\n    var m = merge(a[2], b[2]);\n    return [m[0], node, m[1]];\n  } else {\n    const globalAlignmentResult = globalAlignment(short, long, delta);\n    const temp = globalAlignmentResult[2];\n    //console.log('temp : ', temp, ', node: ', node);\n    const alignmentObj = globalAlignmentResult[3];\n    return [temp, node, alignmentObj];\n  }\n}\n\nfunction h(short, long, match, mismatch, gap) {\n  d = {};\n  const keys = [\"A\", \"C\", \"T\", \"G\", \"-\"];\n  var delta = {};\n  for (var i = 0; i < keys.length; i++) {\n    delta[keys[i]] = {};\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[i] === keys[j]) {\n        delta[keys[i]][keys[j]] = match;\n      } else if (keys[j] == \"-\" || keys[i] == \"-\") {\n        delta[keys[i]][keys[j]] = gap;\n      } else {\n        delta[keys[i]][keys[j]] = mismatch;\n      }\n    }\n  }\n  //console.log(\"delta: \", delta);\n\n  var h = hirschberg(short, long, delta, 0, 0, 0);\n  console.log(\"h:\", h);\n  \n  // console.log(\"d_final: \", d);\n  return h;\n}\n\nexport { h };\n","import React, { Component } from \"react\";\nimport InputForm from \"./InputForm\";\nimport RecursionTree from \"./Tree\";\nimport { h } from \"../Hirschberg\";\nimport \"./Main.css\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence1: \"\",\n      sequence2: \"\",\n      matchScore: 1,\n      mismatchScore: -1,\n      gapScore: -1,\n      displayResult: false,\n      treeData: {},\n      alignment: \"\",\n      alignmentObj: {}\n    };\n    this.submitInput = this.submitInput.bind(this);\n  }\n\n  submitInput(inputObj) {\n    inputObj[\"displayResult\"] = true;\n    console.log(\"submitInput inputObj: \", inputObj);\n\n    var short = inputObj.sequence1;\n    var long = inputObj.sequence2;\n    if (inputObj.sequence1.length > inputObj.sequence2.length) {\n      short = inputObj.sequence2;\n      long = inputObj.sequence1;\n    }\n\n    var hResult = h(\n      short,\n      long,\n      inputObj.matchScore,\n      inputObj.mismatchScore,\n      inputObj.gapScore\n    );\n    //this.setState(inputObj);\n    this.setState({\n      displayResult: true,\n      treeData: hResult[1],\n      alignment: hResult[0],\n      alignmentObj: hResult[2]\n    });\n  }\n\n  render() {\n    console.log(\"state in main: \", this.state);\n    console.log(\"displayResult: \", this.state.displayResult);\n    const text = this.state.alignment;\n    let tree = null;\n    let alignment_header = \"\";\n    let alignment = null;\n    if (this.state.displayResult) {\n      console.log(\"curr state: \", this.state);\n      tree = <RecursionTree data={this.state.treeData} />;\n      alignment_header = \"alignment\";\n      const alignmentObj = this.state.alignmentObj;\n      const middle = alignmentObj.alignment;\n      var new_middle = \"\";\n      for (var i = 0; i < middle.length; i++) {\n        if (middle[i] === \"=\") {\n          new_middle += \"\\xa0\";\n        } else {\n          new_middle += middle[i];\n        }\n      }\n      alignment = (\n        <div className=\"alignment\">\n          <span>{alignment_header}</span>\n          <div>\n            <code key={\"string1\"}>{alignmentObj.string1}</code>\n          </div>\n          <div>\n            <code key={\"alignment\"}>{new_middle}</code>\n          </div>\n          <div>\n            <code key={\"string2\"}>{alignmentObj.string2}</code>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <InputForm submitInput={this.submitInput} />\n        {alignment}\n        {tree}\n      </div>\n    );\n  }\n}\nexport default Main;\n","import React from \"react\";\nimport './App.css';\nimport './Home.css';\nimport Main from './components/Main';\n\nfunction App() {\n  const title = 'Hirschberg\\'s Algorithm Visualization';\n  const description = 'Hirschberg\\'s algorithm is a dynamic programming algorithm that finds the optimal sequence alignment between two strings. Hirschberg modifies global alignment (Needleman–Wunsch algorithm) to using only linear space. Hirschberg uses a divide and conquer approach to partition each problem into two smaller subproblems. Hirschberg is based on the observation that to compute the optimal alignment score, we only need to store the current and previous row of the dynamic programming score matrix of Needleman-Wunsch. ';\n  return (\n    <div className=\"App\">\n      <h2 className='title'>\n        {title}\n      </h2>\n      <h1 className='description'>\n        {description}\n      </h1>\n      <div className='title'>\n        <Main/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}