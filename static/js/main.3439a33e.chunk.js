(this["webpackJsonphirschberg-visualizer"]=this["webpackJsonphirschberg-visualizer"]||[]).push([[0],{31:function(e,t,n){e.exports=n(80)},36:function(e,t,n){},37:function(e,t,n){},38:function(e,t,n){},41:function(e,t,n){},77:function(e,t,n){},78:function(e,t,n){},80:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),l=n(15),o=n.n(l),s=(n(36),n(37),n(38),n(7)),c=n(8),i=n(10),h=n(9),u=n(6),m=n(11),g=n(27),f=n(83),p=n(82),d=n(29),b=n(84),v=n(12),S=n.n(v),E=(n(41),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(i.a)(this,Object(h.a)(t).call(this,e))).state={sequence1:"",sequence2:"",matchScore:0,mismatchScore:0,gapScore:0},n.handleChange=n.handleChange.bind(Object(u.a)(n)),n.handleScoreChange=n.handleScoreChange.bind(Object(u.a)(n)),n.handleSubmit=n.handleSubmit.bind(Object(u.a)(n)),n}return Object(m.a)(t,e),Object(c.a)(t,[{key:"handleChange",value:function(e){console.log("handleChange e.target, e.t.value: ",e.target.id,e.target.value),this.setState(Object(g.a)({},e.target.id,e.target.value))}},{key:"handleScoreChange",value:function(e){console.log("handleScroeChange: ",e),this.setState(e)}},{key:"handleSubmit",value:function(e){console.log("handleSubmit event: ",e),e.preventDefault(),this.props.submitInput(this.state)}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"inputForm"},r.a.createElement(f.a,{onSubmit:this.handleSubmit},r.a.createElement(f.a.Group,{as:p.a,controlId:"sequence1"},r.a.createElement(f.a.Label,{column:!0,sm:3},"Sequence 1"),r.a.createElement(d.a,{sm:9},r.a.createElement(f.a.Control,{size:"sm",onChange:this.handleChange}))),r.a.createElement(f.a.Group,{as:p.a,controlId:"sequence2"},r.a.createElement(f.a.Label,{column:!0,sm:3},"Sequence 2"),r.a.createElement(d.a,{sm:9},r.a.createElement(f.a.Control,{size:"sm",onChange:this.handleChange}))),r.a.createElement(f.a.Group,{as:p.a,controlId:"matchScore"},r.a.createElement(f.a.Label,{className:"numericLabel",column:!0,sm:3},"Match Score"),r.a.createElement(d.a,{sm:4},r.a.createElement(S.a,{value:this.state.matchScore,onChange:function(t){return e.handleScoreChange({matchScore:t})}}))),r.a.createElement(f.a.Group,{as:p.a,controlId:"mismatchScore"},r.a.createElement(f.a.Label,{className:"numericLabel",column:!0,sm:3},"Mismatch Score"),r.a.createElement(d.a,{sm:4},r.a.createElement(S.a,{value:this.state.mismatchScore,onChange:function(t){return e.handleScoreChange({mismatchScore:t})}}))),r.a.createElement(f.a.Group,{as:p.a,controlId:"gapScore"},r.a.createElement(f.a.Label,{className:"numericLabel",column:!0,sm:3},"Gap Score"),r.a.createElement(d.a,{sm:4},r.a.createElement(S.a,{value:this.state.gapScore,onChange:function(t){return e.handleScoreChange({gapScore:t})}}))),r.a.createElement(b.a,{variant:"primary",type:"submit"},"Submit")))}}]),t}(a.Component)),C=n(30),y=n.n(C),j=(n(77),{x:512,y:50});var O=function(e){return r.a.createElement("div",{className:"TreeWrapper"},r.a.createElement(y.a,{data:e.data,orientation:"vertical",translate:j}))},w=[-1,0],I=[0,-1],k=[-1,-1],q=[0,0];function N(e,t,n){for(var a=[],r=[],l=[],o=0;o<e.length+1;o++){a.push([]),r.push([]),l.push([]);for(var s=0;s<t.length+1;s++)a[o][s]=0,r[o][s]=0,l[o][s]=0}for(o=0;o<e.length+1;o++)for(s=1;s<t.length+1;s++)a[o][s]=n["-"][t[s-1]];for(o=1;o<e.length+1;o++)for(s=0;s<t.length+1;s++)r[o][s]=n[e[o-1]]["-"];for(o=1;o<e.length+1;o++)for(s=1;s<t.length+1;s++)l[o][s]=n[e[o-1]][t[s-1]];return[a,r,l]}function x(e){return e.split("").reverse().join("")}function L(e,t,n){for(var a=N(e,t,n),r=a[0],l=a[1],o=a[2],s=[],c=[],i=0;i<e.length+1;i++){s.push([]),c.push([]);for(var h=0;h<t.length+1;h++)s[i][h]=0,c[i][h]=q}for(i=0;i<e.length+1;i++)for(h=0;h<t.length+1;h++)if(0!==i||0!==h)if(i>0&&0===h)s[i][h]=s[i-1][h]+l[i][h],c[i][h]=w;else if(0===i&&h>0)s[i][h]=s[i][h-1]+r[i][h],c[i][h]=I;else{var u=s[i-1][h]+l[i][h],m=s[i][h-1]+r[i][h],g=s[i-1][h-1]+o[i][h];s[i][h]=Math.max(u,m,g),s[i][h]===u?c[i][h]=w:s[i][h]===m?c[i][h]=I:c[i][h]=k}for(var f=e.length,p=t.length,d="",b="";;){var v=c[f][p];if(v===w?(d+=e[f-1],b+="-"):v===I?(d+="-",b+=t[p-1]):v===k?(d+=e[f-1],b+=t[p-1]):(d+=e[f],b+=t[p]),f+=v[0],p+=v[1],0==f&&0==p)break}d=x(d),b=x(b);var S="";for(i=0;i<d.length;i++)d[i]===b[i]?S+="|":S+=" ";return[s,c,S=d+"\n"+S+"\n"+b]}function G(e,t,n,a,r,l){var o={name:"("+e+" / "+t+")",attributes:{prefix_i:a,suffix_j:r,i:e.length+a,j:t.length+r}};if(t.length>1){var s=function(e,t,n){for(var a=N(e,t,n),r=a[0],l=a[1],o=a[2],s=L(e,t,n),c=s[0],i=(s[1],s[2],Math.ceil(t.length/2)),h=[],u=[],m=[],g=0;g<e.length+1;g++){h.push([]),u.push([]),m.push([]);for(var f=0;f<i+1;f++)h[g][f]=r[g][f],u[g][f]=l[g][f],m[g][f]=o[g][f]}var p=[],d=[],b=[];for(g=0;g<e.length+1;g++){p.push([]),d.push([]),b.push([]);for(f=0;f<t.length+1;f++)p[g][f]=0,l[g][f]=0,o[g][f]=0}for(g=e.length;g>-1;g--)for(f=t.length-1;f>i-1;f--)p[g][f]=r[g][f+1];for(g=e.length-1;g>-1;g--)for(f=t.length;f>i-1;f--)d[g][f]=l[g+1][f];for(g=e.length-1;g>-1;g--)for(f=t.length-1;f>i-1;f--)b[g][f]=o[g+1][f+1];var v=[],S=[],E=[];for(g=0;g<e.length+1;g++){v.push([]),S.push([]),E.push([]);for(f=i;f<t.length+1;f++)v[g][f]=p[g][f],S[g][f]=d[g][f],E[g][f]=b[g][f]}var C=[],y=[];for(g=0;g<e.length+1;g++){C.push([]),y.push([]);for(f=0;f<t.length+1;f++)C[g][f]=0,y[g][f]=q}for(g=e.length;g>-1;g--)for(f=t.length;f>-1;f--)if(g!==e.length||f!==t.length)if(g===e.length&&f<t.length)y[g][f]=I,C[g][f]=C[g][f+1]+p[g][f];else if(g<e.length&&f===t.length)y[g][f]=w,C[g][f]=C[g+1][f]+d[g][f];else{var j=C[g][f+1]+p[g][f],O=C[g+1][f]+d[g][f],x=C[g+1][f+1]+b[g][f],G=Math.max(j,O,x);y[g][f]=G===j?I:G===O?w:k,C[g][f]=G}var R=[],z=[],H=[],M=[],W=[];for(g=0;g<e.length+1;g++){R.push([]);for(f=0;f<i+1;f++)R[g].push(c[g][f]);z.push([]);for(f=i;f<t.length+1;f++)z[g].push(C[g][f])}for(g=0;g<e.length+1;g++)H.push(R[g][R[0].length-1]),M.push(z[g][0]);for(g=0;g<e.length+1;g++)W.push(H[g]+M[g]);var D=0,A=W[0];for(g=0;g<e.length+1;g++)W[g]>A&&(A=W[g],D=g);return[D,i]}(e,t,n),c=s[0],i=s[1],h=G(e.substring(0,c),t.substring(0,i),n,a,r,l+1),u=G(e.substring(c,e.length),t.substring(i,t.length),n,a+c,r+i,l+1);o.children=[h[1],u[1]];var m=function(e,t){for(var n=e.indexOf("\n"),a=e.substring(0,n)+t.substring(0,n),r=e.substring(2*n+2,e.length)+t.substring(2*n+2,t.length),l="",o=0;o<a.length;o++)l+=a[o]===r[o]?"|":" ";return a+"\n"+l+"\n"+r}(h[0],u[0]);return console.log("m: ",m,", node: ",o),[m,o]}var g=L(e,t,n)[2];return console.log("temp : ",g,", node: ",o),[g,o]}n(78);var R=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(i.a)(this,Object(h.a)(t).call(this,e))).state={sequence1:"",sequence2:"",matchScore:0,mismatchScore:0,gapScore:0,displayResult:!1,treeData:{},alignment:""},n.submitInput=n.submitInput.bind(Object(u.a)(n)),n}return Object(m.a)(t,e),Object(c.a)(t,[{key:"submitInput",value:function(e){e.displayResult=!0,console.log("submitInput inputObj: ",e);var t=function(e,t,n,a,r){({});for(var l=["A","C","T","G","-"],o={},s=0;s<l.length;s++){o[l[s]]={};for(var c=0;c<l.length;c++)o[l[s]][l[c]]=l[s]===l[c]?n:"-"==l[c]||"-"==l[s]?r:a}var i=G(e,t,o,0,0,0);return console.log("h:",i),i}(e.sequence1,e.sequence2,e.matchScore,e.mismatchScore,e.gapScore);console.log("hResult: ",t),this.setState(e),this.setState({treeData:t[1],alignment:t[0]})}},{key:"render",value:function(){console.log("state in main: ",this.state),console.log("displayResult: ",this.state.displayResult);var e=this.state.alignment,t=null,n="",a=null;return this.state.displayResult&&(console.log("curr state: ",this.state),t=r.a.createElement(O,{data:this.state.treeData}),n="alignment",a=r.a.createElement("div",{className:"alignment"},r.a.createElement("span",null,n),e.split("\n").map((function(e,t){return r.a.createElement("div",null,r.a.createElement("code",{key:t},e))})))),r.a.createElement("div",null,r.a.createElement(E,{submitInput:this.submitInput}),a,t)}}]),t}(a.Component);var z=function(){return r.a.createElement("div",{className:"App"},r.a.createElement("h2",{className:"title"},"Hirschberg's Algorithm Visualization"),r.a.createElement("h1",{className:"description"},"Hirschberg's algorithm is a dynamic programming algorithm that finds the optimal sequence alignment between two strings. Hirschberg modifies global alignment (Needleman\u2013Wunsch algorithm) to using only linear space. Hirschberg uses a divide and conquer approach to partition each problem into two smaller subproblems. Hirschberg is based on the observation that to compute the optimal alignment score, we only need to store the current and previous row of the dynamic programming score matrix of Needleman-Wunsch. "),r.a.createElement("div",{className:"title"},r.a.createElement(R,null)))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(79);o.a.render(r.a.createElement(z,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[31,1,2]]]);
//# sourceMappingURL=main.3439a33e.chunk.js.map