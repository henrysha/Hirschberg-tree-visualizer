{"version":3,"sources":["components/InputForm.js","components/Tree.js","Hirschberg.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["InputForm","props","state","sequence1","sequence2","matchScore","mismatchScore","gapScore","handleChange","bind","handleScoreChange","handleSubmit","e","console","log","target","id","value","this","setState","keyValueObj","preventDefault","submitInput","className","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","size","onChange","Button","variant","type","Component","initialPosition","x","y","RecursionTree","data","orientation","translate","UP","LEFT","TOPLEFT","ORIGIN","d","getWeights","v","w","delta","rights","downs","downrights","i","length","push","j","revStr","str","split","reverse","join","globalAlignment","getWeightsResult","table","pointers","choice1","choice2","choice3","Math","max","m","n","string1","string2","point","alignment","merge","alignment1","alignment2","indexOf","a","substring","b","middle","hirschberg","short","long","indent_i","indent_j","level","node","name","attributes","prefix_i","suffix_j","psR","gwR","gaR","ceil","p1","p2","p3","lefts","ups","uplefts","s1","s2","s3","suffixTable","suffixPointers","choice","pTable","sTable","pList","sList","sumList","report","maxVal","prefixSuffix","Main","displayResult","treeData","inputObj","hResult","keys","h","text","tree","alignment_header","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d63738b9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport NumericInput from 'react-numeric-input';\nimport './InputForm.css';\n\nclass InputForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsequence1: '',\n\t\t\tsequence2: '',\n\t\t\tmatchScore: 0,\n\t\t\tmismatchScore: 0,\n\t\t\tgapScore: 0,\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleScoreChange = this.handleScoreChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tconsole.log('handleChange e.target, e.t.value: ', e.target.id, e.target.value);\n\t\tthis.setState({\n\t\t\t[e.target.id]: e.target.value\n\t\t});\n\t}\n\n\thandleScoreChange(keyValueObj) {\n\t\tconsole.log('handleScroeChange: ', keyValueObj);\n\t\tthis.setState(keyValueObj);\n\t}\n\n\thandleSubmit(e) {\n\t\tconsole.log('handleSubmit event: ', e);\n\t\te.preventDefault();\n\t\tthis.props.submitInput(this.state);\n\t}\n \n\trender() {\n\t\treturn (\n\t\t\t<div className='inputForm'>\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Form.Group as={Row} controlId=\"sequence1\">\n\t\t\t\t\t\t<Form.Label column sm={3}>Sequence 1</Form.Label>\n\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t<Form.Control size='sm' onChange={this.handleChange} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group as={Row} controlId=\"sequence2\">\n\t\t\t\t\t\t<Form.Label column sm={3}>Sequence 2</Form.Label>\n\t\t\t\t\t\t<Col sm={9}>\n\t\t\t\t\t\t\t<Form.Control size='sm' onChange={this.handleChange} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group as={Row} controlId=\"matchScore\">\n\t\t\t\t\t\t<Form.Label className='numericLabel' column sm={3}>Match Score</Form.Label>\n\t\t\t\t\t\t<Col sm={4}>\n\t\t\t\t\t\t\t<NumericInput value={this.state.matchScore} onChange={(value) => this.handleScoreChange({ matchScore: value })} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group> \n\t\t\t\t\t<Form.Group as={Row} controlId=\"mismatchScore\">\n\t\t\t\t\t\t<Form.Label className='numericLabel' column sm={3}>Mismatch Score</Form.Label>\n\t\t\t\t\t\t<Col sm={4}>\n\t\t\t\t\t\t\t<NumericInput value={this.state.mismatchScore} onChange={(value) => this.handleScoreChange({ mismatchScore: value })} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group as={Row} controlId=\"gapScore\">\n\t\t\t\t\t\t<Form.Label className='numericLabel' column sm={3}>Gap Score</Form.Label>\n\t\t\t\t\t\t<Col sm={4}>\n\t\t\t\t\t\t\t<NumericInput value={this.state.gapScore} onChange={(value) => this.handleScoreChange({ gapScore: value })} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\tSubmit\n  \t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default InputForm;\n","import React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport \"./Tree.css\";\n\nlet initialPosition = { x: 512, y: 50 };\nfunction RecursionTree(props) {\n  return (\n    <div className=\"TreeWrapper\">\n      <Tree\n        data={props.data}\n        orientation=\"vertical\"\n        translate={initialPosition}\n      />\n    </div>\n  );\n}\n\nexport default RecursionTree;\n","import { Children } from \"react\";\n\nconst UP = [-1, 0];\nconst LEFT = [0, -1];\nconst TOPLEFT = [-1, -1];\nconst ORIGIN = [0, 0];\nvar d = {};\nfunction getWeights(v, w, delta) {\n  var rights = [];\n  var downs = [];\n  var downrights = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    rights.push([]);\n    downs.push([]);\n    downrights.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      rights[i][j] = 0;\n      downs[i][j] = 0;\n      downrights[i][j] = 0;\n    }\n  }\n  for (var i = 0; i < v.length + 1; i++) {\n    for (var j = 1; j < w.length + 1; j++) {\n      console.log(\"delta, w[j-1]: \", delta, w[j - 1]);\n      rights[i][j] = delta[\"-\"][w[j - 1]];\n    }\n  }\n  for (var i = 1; i < v.length + 1; i++) {\n    for (var j = 0; j < w.length + 1; j++) {\n      console.log(\"delta 26: \", delta);\n      console.log(v[i - 1]);\n      console.log(\"v: \", v);\n      downs[i][j] = delta[v[i - 1]][\"-\"];\n    }\n  }\n  for (var i = 1; i < v.length + 1; i++) {\n    for (var j = 1; j < w.length + 1; j++) {\n      downrights[i][j] = delta[v[i - 1]][w[j - 1]];\n    }\n  }\n  return [rights, downs, downrights];\n}\n\nfunction revStr(str) {\n  return str\n    .split(\"\")\n    .reverse()\n    .join(\"\");\n}\n\nfunction globalAlignment(v, w, delta) {\n  const getWeightsResult = getWeights(v, w, delta);\n  var rights = getWeightsResult[0];\n  var downs = getWeightsResult[1];\n  var downrights = getWeightsResult[2];\n  console.log(\"rights, downs, dr: \", rights, downs, downrights);\n  var table = [];\n  var pointers = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    table.push([]);\n    pointers.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      table[i][j] = 0;\n      pointers[i][j] = ORIGIN;\n    }\n  }\n  for (var i = 0; i < v.length + 1; i++) {\n    for (var j = 0; j < w.length + 1; j++) {\n      if (i === 0 && j === 0) {\n        continue;\n      } else if (i > 0 && j === 0) {\n        table[i][j] = table[i - 1][j] + downs[i][j];\n        pointers[i][j] = UP;\n      } else if (i === 0 && j > 0) {\n        console.log(\"i, j, table, rights: \", i, j, table, rights);\n        table[i][j] = table[i][j - 1] + rights[i][j];\n        pointers[i][j] = LEFT;\n      } else {\n        var choice1 = table[i - 1][j] + downs[i][j];\n        var choice2 = table[i][j - 1] + rights[i][j];\n        var choice3 = table[i - 1][j - 1] + downrights[i][j];\n        table[i][j] = Math.max(choice1, choice2, choice3);\n        if (table[i][j] === choice1) {\n          pointers[i][j] = UP;\n        } else if (table[i][j] === choice2) {\n          pointers[i][j] = LEFT;\n        } else {\n          pointers[i][j] = TOPLEFT;\n        }\n      }\n    }\n  }\n  var m = v.length;\n  var n = w.length;\n  var string1 = \"\";\n  var string2 = \"\";\n  while (1) {\n    var point = pointers[m][n];\n    if (point === UP) {\n      string1 += v[m - 1];\n      string2 += \"-\";\n    } else if (point === LEFT) {\n      string1 += \"-\";\n      string2 += w[n - 1];\n    } else if (point === TOPLEFT) {\n      string1 += v[m - 1];\n      string2 += w[n - 1];\n    } else {\n      string1 += v[m];\n      string2 += w[n];\n    }\n    m += point[0];\n    n += point[1];\n    if (m == 0 && n == 0) {\n      break;\n    }\n  }\n  string1 = revStr(string1);\n  string2 = revStr(string2);\n  var alignment = \"\";\n  for (var i = 0; i < string1.length; i++) {\n    if (string1[i] === string2[i]) {\n      alignment += \"|\";\n    } else {\n      alignment += \" \";\n    }\n  }\n  alignment = string1 + \"\\n\" + alignment + \"\\n\" + string2;\n  return [table, pointers, alignment];\n}\n\nfunction prefixSuffix(v, w, delta) {\n  const gwR = getWeights(v, w, delta);\n  var rights = gwR[0];\n  var downs = gwR[1];\n  var downrights = gwR[2];\n  const gaR = globalAlignment(v, w, delta);\n  var table = gaR[0];\n  var pointers = gaR[1];\n  var alignment = gaR[2];\n  var split = Math.ceil(w.length / 2);\n  var p1 = [];\n  var p2 = [];\n  var p3 = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    p1.push([]);\n    p2.push([]);\n    p3.push([]);\n    for (var j = 0; j < split + 1; j++) {\n      p1[i][j] = rights[i][j];\n      p2[i][j] = downs[i][j];\n      p3[i][j] = downrights[i][j];\n    }\n  }\n  var lefts = [];\n  var ups = [];\n  var uplefts = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    lefts.push([]);\n    ups.push([]);\n    uplefts.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      lefts[i][j] = 0;\n      downs[i][j] = 0;\n      downrights[i][j] = 0;\n    }\n  }\n  for (var i = v.length; i > -1; i--) {\n    for (var j = w.length - 1; j > split - 1; j--) {\n      lefts[i][j] = rights[i][j + 1];\n    }\n  }\n  for (var i = v.length - 1; i > -1; i--) {\n    for (var j = w.length; j > split - 1; j--) {\n      ups[i][j] = downs[i + 1][j];\n    }\n  }\n  for (var i = v.length - 1; i > -1; i--) {\n    for (var j = w.length - 1; j > split - 1; j--) {\n      uplefts[i][j] = downrights[i + 1][j + 1];\n    }\n  }\n  var s1 = [];\n  var s2 = [];\n  var s3 = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    s1.push([]);\n    s2.push([]);\n    s3.push([]);\n    for (var j = split; j < w.length + 1; j++) {\n      s1[i][j] = lefts[i][j];\n      s2[i][j] = ups[i][j];\n      s3[i][j] = uplefts[i][j];\n    }\n  }\n\n  var suffixTable = [];\n  var suffixPointers = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    suffixTable.push([]);\n    suffixPointers.push([]);\n    for (var j = 0; j < w.length + 1; j++) {\n      suffixTable[i][j] = 0;\n      suffixPointers[i][j] = ORIGIN;\n    }\n  }\n\n  for (var i = v.length; i > -1; i--) {\n    for (var j = w.length; j > -1; j--) {\n      if (i === v.length && j === w.length) {\n        continue;\n      } else if (i === v.length && j < w.length) {\n        suffixPointers[i][j] = LEFT;\n        suffixTable[i][j] = suffixTable[i][j + 1] + lefts[i][j];\n      } else if (i < v.length && j === w.length) {\n        suffixPointers[i][j] = UP;\n        suffixTable[i][j] = suffixTable[i + 1][j] + ups[i][j];\n      } else {\n        var choice1 = suffixTable[i][j + 1] + lefts[i][j];\n        var choice2 = suffixTable[i + 1][j] + ups[i][j];\n        var choice3 = suffixTable[i + 1][j + 1] + uplefts[i][j];\n        var choice = Math.max(choice1, choice2, choice3);\n        if (choice === choice1) {\n          suffixPointers[i][j] = LEFT;\n        } else if (choice === choice2) {\n          suffixPointers[i][j] = UP;\n        } else {\n          suffixPointers[i][j] = TOPLEFT;\n        }\n        suffixTable[i][j] = choice;\n      }\n    }\n  }\n\n  var pTable = [];\n  var sTable = [];\n  var pList = [];\n  var sList = [];\n  var sumList = [];\n  for (var i = 0; i < v.length + 1; i++) {\n    pTable.push([]);\n    for (var j = 0; j < split + 1; j++) {\n      pTable[i].push(table[i][j]);\n    }\n    sTable.push([]);\n    for (var j = split; j < w.length + 1; j++) {\n      sTable[i].push(suffixTable[i][j]);\n    }\n  }\n\n  for (var i = 0; i < v.length + 1; i++) {\n    pList.push(pTable[i][pTable[0].length - 1]);\n    sList.push(sTable[i][0]);\n  }\n\n  for (var i = 0; i < v.length + 1; i++) {\n    sumList.push(pList[i] + sList[i]);\n  }\n\n  var report = 0;\n  var maxVal = sumList[0];\n  console.log(\"sumList: \", sumList);\n\n  for (var i = 0; i < v.length + 1; i++) {\n    if (sumList[i] > maxVal) {\n      maxVal = sumList[i];\n      report = i;\n    }\n  }\n  return [report, split];\n}\n\nfunction merge(alignment1, alignment2) {\n  var length = alignment1.indexOf(\"\\n\");\n  var a = alignment1.substring(0, length) + alignment2.substring(0, length);\n  var b =\n    alignment1.substring(length * 2 + 2, alignment1.length) +\n    alignment2.substring(length * 2 + 2, alignment2.length);\n  var middle = \"\";\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      middle += \"|\";\n    } else {\n      middle += \" \";\n    }\n  }\n  return a + \"\\n\" + middle + \"\\n\" + b;\n}\n\nfunction hirschberg(short, long, delta, indent_i, indent_j, level) {\n  console.log(\"d: \", d, \", level: \", level);\n  var node = {\n    name: \"(\" + short + \" / \" + long + \")\",\n    attributes: {\n      prefix_i: indent_i,\n      suffix_j: indent_j,\n      i: short.length + indent_i,\n      j: short.length + indent_j\n    }\n  };\n  console.log(\"node: \", node);\n\n  // if (!(level in d)) {\n  //   d[level] = [];\n  // }\n  // d[level].push([\n  //   indent_i,\n  //   indent_j,\n  //   short.length + indent_i,\n  //   long.length + indent_j,\n  //   short,\n  //   long\n  // ]);\n  // console.log(\"d[level]: \", d[level]);\n  if (long.length > 1) {\n    const psR = prefixSuffix(short, long, delta);\n    var i = psR[0];\n    var j = psR[1];\n    var a = hirschberg(\n      short.substring(0, i),\n      long.substring(0, j),\n      delta,\n      indent_i,\n      indent_j,\n      level + 1\n    );\n    var b = hirschberg(\n      short.substring(i, short.length),\n      long.substring(j, long.length),\n      delta,\n      indent_i + i,\n      indent_j + j,\n      level + 1\n    );\n    node[\"children\"] = [a[1], b[1]];\n    return [merge(a[0], b[0]), node];\n  } else {\n    return [globalAlignment(short, long, delta)[2], node];\n  }\n}\n\nfunction h(short, long) {\n  d = {};\n  const keys = [\"A\", \"C\", \"T\", \"G\", \"-\"];\n  var delta = {};\n  for (var i = 0; i < keys.length; i++) {\n    delta[keys[i]] = {};\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[i] === keys[j]) {\n        delta[keys[i]][keys[j]] = 1;\n      } else {\n        delta[keys[i]][keys[j]] = -1;\n      }\n    }\n  }\n  console.log(\"delta: \", delta);\n\n  var h = hirschberg(short, long, delta, 0, 0, 0);\n  console.log(\"h:\", h);\n  // console.log(\"d_final: \", d);\n  return h;\n}\n\nexport { h };\n","import React, { Component } from \"react\";\nimport InputForm from \"./InputForm\";\nimport RecursionTree from \"./Tree\";\nimport { h } from \"../Hirschberg\";\nimport \"./Main.css\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sequence1: \"\",\n      sequence2: \"\",\n      matchScore: 0,\n      mismatchScore: 0,\n      gapScore: 0,\n      displayResult: false,\n      treeData: {},\n      alignment: \"\"\n    };\n    this.submitInput = this.submitInput.bind(this);\n  }\n\n  submitInput(inputObj) {\n    inputObj[\"displayResult\"] = true;\n    console.log(\"submitInput inputObj: \", inputObj);\n\n    var hResult = h(inputObj.sequence1, inputObj.sequence2);\n    console.log(\"hResult: \", hResult);\n    this.setState(inputObj);\n    this.setState({\n      treeData: hResult[1],\n      alignment: hResult[0]\n    });\n  }\n\n  render() {\n    console.log(\"state in main: \", this.state);\n    console.log(\"displayResult: \", this.state.displayResult);\n    const text = this.state.alignment;\n    let tree = null;\n    let alignment_header = \"\";\n    let alignment = null;\n    if (this.state.displayResult) {\n      console.log(\"curr state: \", this.state);\n      tree = <RecursionTree data={this.state.treeData} />;\n      alignment_header = \"alignment\";\n      alignment = (\n        <div className=\"alignment\">\n          <span>{alignment_header}</span>\n          {text.split(\"\\n\").map((i, key) => {\n            return (\n              <div>\n                <code key={key}>{i}</code>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <InputForm submitInput={this.submitInput} />\n        {alignment}\n        {tree}\n      </div>\n    );\n  }\n}\nexport default Main;\n","import React from \"react\";\nimport './App.css';\nimport './Home.css';\nimport Main from './components/Main';\n\nfunction App() {\n  const title = 'Hirschberg\\'s Algorithm Visualization';\n  return (\n    <div className=\"App\">\n      <h2 className='title'>\n        {title}\n      </h2>\n      <div className='title'>\n        <Main/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}